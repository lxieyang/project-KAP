.HoverInteraction {
  font-size: 14px;
  font-family: Arial, Helvetica, sans-serif;
  padding: 8px 14px;
  max-width: 500px;
  height: auto;
  background-color: rgba(226, 236, 244, 1);
  font-size: 1.13rem;
  box-shadow: 0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19);
  display: flex;
  flex-flow: row;
  position: relative;
}

.InteractionBoxDragHandle {
  position: absolute;
  top: 2px;
  left: 4px;
  font-size: 10px;
  cursor: move;
}

.CloseBoxContainer {
  position: absolute;
  top: 2px;
  right: 4px;
  font-size: 12px;
  cursor: pointer;
}

.AddPane {
  margin-top: 12px;
  font-size: 18px;
  margin-right: 20px;
  display: flex;
  justify-content: space-between;
  flex-flow: column;
}

.CurrentTaskNContainer {
  margin-bottom: 14px;
}

.CurrentTaskLabel {

  font-weight: 600;
}

.CurrentTaskName {
  margin-top: 8px;
  font-size: 22px;
  color: gray;
}

::placeholder {
  color: lightgray;
}

/* .Icon {
  background: transparent;
  border: 1px solid #DA4F50;
  padding: 3px 10px;
  border-radius: 10px;
  font-size: 1.3rem;
  color: #DA4F50;
}

.Icon:hover {
  background: transparent;
  cursor: pointer;
  border: 1px solid #DA4F50;
  color: #DA4F50;
} */




.showPane {
  flex: 1;
  font-size: 18px;
  flex-shrink: 0;
  min-width: 250px;
  margin-top: 12px;
  margin-right: 10px;
}

.OptionList {
  font-size: 1rem;
  padding-left: 10px;
}

.OptionList ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.OptionList ul li {
  margin: 10px 0px;
  display: flex;
  align-items: center;
}

.Option {
  font-size: 15px;
  color: white;
  font-weight: 300;
  font-family: 'Encode Sans Semi Expanded', sans-serif;
  background-color: #4e89bc;
  padding: 4px 10px;
  border-radius: 5px;
  box-sizing: border-box;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.16), 0 1px 5px 0 rgba(0,0,0,0.12);
}

.Requirement {
  font-size: 15px;
  color: white;
  font-weight: 300;
  font-family: 'Encode Sans Semi Expanded', sans-serif;
  background-color: #72c8e2;
  padding: 4px 10px;
  border-radius: 5px;
  box-sizing: border-box;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.16), 0 1px 5px 0 rgba(0,0,0,0.12);

  position: relative;
}

.RequirementStar {
  position: absolute;
  top: -8px;
  left: -8px;
  color: rgb(255, 232,90);
  transition: all 0.1s ease-in;
  opacity: 0;
  cursor: pointer;
}

.ActiveStar {
  opacity: 1;
}

.Ordinal {
  flex-shrink: 0;
  cursor: default;
  margin-right: 6px;
  padding: 3px 6px;
  width: 30px;
  text-align: center;
  border-radius: 4px;
  font-size: 15px;
  font-weight: 500;
  color: white;
  background-color: #4a8bfc;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08), 0 2px 4px rgba(0, 0, 0, 0.12);
}



/* Clip button */
.ClipButtonContainer {
  display: flex;
  padding-right: 5px;
  align-items: center;
  margin-top: 0px;
}

.ClipButton:focus,
.ClipButton {
  max-width: 220px;
  padding: 3px 12px;
  height: 40px;
  background: rgb(236, 236, 236);
  color: gray;
  border: none;
  outline: none;
  border-radius: 3px;
  position: relative;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.10), 0 1px 3px 0 rgba(0,0,0,0.06);
  cursor: pointer;
}

.ClipButton.active{
  background: rgb(236, 236, 236);
  color: white;
  border: none;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.10), 0 1px 3px 0 rgba(0,0,0,0.06);
}

.ClipButton:hover {
  background: rgb(236, 236, 236);
  color: gray;
  border: none;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.10), 0 1px 3px 0 rgba(0,0,0,0.06);
}

.ClipButtonIcon {
}

.ButtonText {
  font-size: 14px;
}

.CheckmarkContainer {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
}

.Checkmark {
  display: block;
  opacity: 0;
}

.Checkmark:after{
  /*Add another block-level blank space*/
  content: '';
  display: block;
  box-sizing: border-box;

  /*Make it a small rectangle so the border will create an L-shape*/
  width: 14px;
  height: 22px;

  /*Add a white border on the bottom and left, creating that 'L' */
  border: solid #000;
  border-width: 0 6px 6px 0;
  border-color: rgb(0, 200, 0);

  /*Rotate the L 45 degrees to turn it into a checkmark*/
  transform: rotate(45deg);
}

.CheckmarkSpin {
  animation-name: SpinOneRound;
  animation-duration: 0.3s;
  animation-iteration-count: 1;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

@keyframes SpinOneRound {
  0% {
    opacity: 0;
    transform: rotate(0deg);
  }
  20% {
    opacity: 0.1;
    transform: rotate(10deg);
  }
  25% {
    opacity: 0.2;
    transform: rotate(90deg);
  }
  50% {
    opacity: 0.5;
    transform: rotate(270deg);
  }
  100% {
    opacity: 1;
    transform: rotate(720deg);
  }
}

.ButtonTextDisappear {
  animation-name: DisappearOneRound;
  animation-duration: 0.3s;
  animation-iteration-count: 1;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

@keyframes DisappearOneRound {
  0% {
    opacity: 1;
  }
  20% {
    opacity: 0.5;
  }
  25% {
    opacity: 0.2;
  }
  50% {
    opacity: 0.1;
  }
  100% {
    opacity: 0;
  }
}